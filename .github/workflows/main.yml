name: Kernel Build (r563880)

on:
  workflow_dispatch:

env:
  TZ: Asia/Kolkata

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4.2.2

      - name: Install Build Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git ccache build-essential bc bison flex libssl-dev libncurses-dev \
            liblz4-tool libzstd-dev zstd curl python3 unzip aria2 device-tree-compiler

      - name: Download and Sync Clang Toolchain
        run: |
          TOOLCHAIN_DIR="$HOME/toolchains/clang"
          mkdir -p "$TOOLCHAIN_DIR"
          cd "$TOOLCHAIN_DIR"
          curl -L "https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main-kernel/clang-r563880.tar.gz" -o clang-toolchain.tar.gz
          tar -xvzf clang-toolchain.tar.gz

      - name: Write IST Build Time to File
        run: |
          mkdir -p out
          IST_TIME=$(date +"%Y-%m-%d %H:%M IST")
          echo "Build Time (IST): $IST_TIME" > out/ist_build_time.txt

      - name: Configure and Build Kernel
        run: |
          export PATH="$HOME/toolchains/clang/bin:$PATH"

          make distclean
          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            CLANG_TRIPLE=aarch64-linux-gnu- \
            CROSS_COMPILE=$HOME/toolchains/clang/bin/aarch64-linux-android- \
            AR=llvm-ar \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            NM=llvm-nm \
            LLVM_DIS=llvm-dis \
            OBJCOPY=llvm-objcopy \
            READELF=llvm-readelf \
            OBJDUMP=llvm-objdump \
            OBJSIZE=llvm-size \
            STRIP=llvm-strip \
            LLVM=1 \
            LD=ld.lld \
            LLVM_IAS=1 \
            vendor/obiwan_defconfig

          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            CLANG_TRIPLE=aarch64-linux-gnu- \
            CROSS_COMPILE=$HOME/toolchains/clang/bin/aarch64-linux-android- \
            AR=llvm-ar \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            NM=llvm-nm \
            LLVM_DIS=llvm-dis \
            OBJCOPY=llvm-objcopy \
            READELF=llvm-readelf \
            OBJDUMP=llvm-objdump \
            OBJSIZE=llvm-size \
            STRIP=llvm-strip \
            LLVM=1 \
            LD=ld.lld \
            LLVM_IAS=1

      - name: Merge DTBs
        run: |
          find out/arch/arm64/boot/dts/vendor -name '*.dtb' -exec cat {} + > out/arch/arm64/boot/dtb

      - name: Package with AnyKernel3
        run: |
          IST_TIME=$(date +"%Y-%m-%d_%H-%M")
          ZIP_NAME="AK3_obiwan_${IST_TIME}.zip"
          echo "$ZIP_NAME" > zip_name.txt

          git clone https://github.com/SA9990/AK3_obiwan.git

          cp out/arch/arm64/boot/Image AK3_obiwan/
          cp out/arch/arm64/boot/dtb AK3_obiwan/
          find out/ -type f -name "*.ko" -exec cp {} AK3_obiwan/modules/system/lib/modules/ \; || true
          find out/ -type f -name "dtbo.img" -exec cp {} AK3_obiwan/ \; || true

          cd AK3_obiwan
          zip -r9 "../$ZIP_NAME" * -x .git README.md *placeholder

      - name: Upload ZIP to GitHub Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: AnyKernel
          path: "*.zip"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: "build-r563880"
          name: "Kernel Build r563880"
          body: |
            kernel build (obiwan)
          files: "*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
